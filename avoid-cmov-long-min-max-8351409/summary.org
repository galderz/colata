#+STARTUP: overview
#+TODO: TODO IN-PROGRESS WAITING CANCELLED REASSIGNED DEFERRED DUPLICATE DONE

* 1.4.25
** Comparison
#+begin_src bash
Benchmark                              (probability)  (size)   Mode  Cnt     Score     Error   Units
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  2520.310 ? 183.514  ops/ms # disable intrinsic maxL
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  2321.742 ? 289.782  ops/ms # branch never
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8   914.140 ?  30.055  ops/ms # branch always
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  1023.075 ?  73.846  ops/ms # cmov
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  3525.033 ? 101.415  ops/ms # disable intrinsic maxL
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  3637.567 ?  84.313  ops/ms # branch never
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8   928.003 ?  23.162  ops/ms # branch always
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  1105.859 ?   5.286  ops/ms # cmov
#+end_src
** Disable Intrinsic
*** release
#+begin_src bash
Benchmark                              (probability)  (size)   Mode  Cnt     Score     Error   Units
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  2520.310 ? 183.514  ops/ms
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  3525.033 ? 101.415  ops/ms
#+end_src
*** profiler
**** longReductionMultiplyMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub, version 5, compile id 542

                     0x00000001138e05c4:   str		xzr, [x19, #0x20]   ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@48 (line 109)
                     0x00000001138e05c8:   str		x0, [x19, #0x30]    ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@42 (line 108)
                     0x00000001138e05cc:   ldp		x29, x30, [sp, #0x50]
                     0x00000001138e05d0:   add		sp, sp, #0x60
                     0x00000001138e05d4:   ldr		x8, [x28, #0x28]    ;   {poll_return}
                     0x00000001138e05d8:   cmp		sp, x8
                     0x00000001138e05dc:   b.hi		#0x1138e0828
                     0x00000001138e05e0:   ret
   3.15%       ?     0x00000001138e05e4:   mov		x12, x7
               ?     0x00000001138e05e8:   nop
   0.02%       ?     0x00000001138e05ec:   nop
  18.92%      ??     0x00000001138e05f0:   cmp		x12, x21
   0.09%  ?   ??     0x00000001138e05f4:   b.ge		#0x1138e0654
  16.45%  ?   ??  ?  0x00000001138e05f8:   cmp		x21, x6
   0.02%  ??  ??  ?  0x00000001138e05fc:   b.ge		#0x1138e0644        ;*lreturn {reexecute=0 rethrow=0 return_oop=0}
          ??  ??  ?                                                            ; - java.lang.Math::max@11 (line 2038)
          ??  ??  ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
          ??  ??  ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
  22.22%  ??  ??? ?  0x00000001138e0600:   add		w1, w1, #4          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ??  ??? ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@34 (line 284)
          ??  ??? ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.25%  ??  ??? ?  0x00000001138e0604:   cmp		w1, w11
   0.07%  ??? ??? ?  0x00000001138e0608:   b.ge		#0x1138e065c        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@11 (line 284)
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
          ??? ??? ?  0x00000001138e060c:   mov		x22, x6             ;*ldc2_w {reexecute=0 rethrow=0 return_oop=0}
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@14 (line 285)
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
          ??? ??? ?  0x00000001138e0610:   add		x12, x5, w1, sxtw #3;*laload {reexecute=0 rethrow=0 return_oop=0}
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@23 (line 285)
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.00%  ??? ??? ?  0x00000001138e0614:   ldr		x7, [x12, #0x10]
          ??? ??? ?  0x00000001138e0618:   ldp		x21, x6, [x12, #0x20]
  20.24%  ??? ??? ?  0x00000001138e061c:   ldr		x12, [x12, #0x18]
   0.06%  ??? ??? ?  0x00000001138e0620:   mul		x7, x7, x15
   0.22%  ??? ??? ?  0x00000001138e0624:   mul		x6, x6, x15
          ??? ??? ?  0x00000001138e0628:   mul		x12, x12, x15
          ??? ??? ?  0x00000001138e062c:   mul		x21, x21, x15       ;*lmul {reexecute=0 rethrow=0 return_oop=0}
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@24 (line 285)
          ??? ??? ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.07%  ??? ??? ?  0x00000001138e0630:   cmp		x22, x7
          ??????? ?  0x00000001138e0634:   b.ge		#0x1138e064c        ;*lreturn {reexecute=0 rethrow=0 return_oop=0}
          ??????? ?                                                            ; - java.lang.Math::max@11 (line 2038)
          ??????? ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
          ??????? ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
  16.85%  ?????????  0x00000001138e0638:   cmp		x7, x12
          ?????????  0x00000001138e063c:   b.lt		#0x1138e05f0        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
          ???? ????                                                            ; - java.lang.Math::max@3 (line 2038)
          ???? ????                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
          ???? ????                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.01%  ???? ????  0x00000001138e0640:   b		#0x1138e05e4
   0.10%  ????  ???  0x00000001138e0644:   mov		x6, x21
          ? ??  ???  0x00000001138e0648:   b		#0x1138e0600
   0.11%  ? ??   ??  0x00000001138e064c:   mov		x7, x22
          ? ?    ??  0x00000001138e0650:   b		#0x1138e0638
   0.30%  ? ?     ?  0x00000001138e0654:   mov		x21, x12
            ?     ?  0x00000001138e0658:   b		#0x1138e05f8
            ?        0x00000001138e065c:   ldr		x7, [x28, #0x30]    ; ImmutableOopMap {r13=Oop c_rarg0=Oop c_rarg2=Oop c_rarg4=Oop c_rarg3=Derived_oop_c_rarg4 c_rarg5=Oop r19=Oop }
                                                                               ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                               ; - (reexecute) org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@37 (line 284)
                                                                               ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.04%             0x00000001138e0660:   ldr		wzr, [x7]           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@37 (line 284)
                                                                               ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
                                                                               ;   {poll}
                     0x00000001138e0664:   cmp		w1, w17
                     0x00000001138e0668:   b.ge		#0x1138e06bc
                     0x00000001138e066c:   mov		x22, x6
                     0x00000001138e0670:   cmp		w17, w1
....................................................................................................
#+end_src
**** longReductionSimpleMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub, version 5, compile id 545

                             0x000000012fae5dac:   str		xzr, [x19, #0x20]   ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@48 (line 109)
                             0x000000012fae5db0:   str		x0, [x19, #0x30]    ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@42 (line 108)
                             0x000000012fae5db4:   ldp		x29, x30, [sp, #0x50]
                             0x000000012fae5db8:   add		sp, sp, #0x60
                             0x000000012fae5dbc:   ldr		x8, [x28, #0x28]    ;   {poll_return}
                             0x000000012fae5dc0:   cmp		sp, x8
                             0x000000012fae5dc4:   b.hi		#0x12fae603c
                             0x000000012fae5dc8:   ret
   1.07%           ?         0x000000012fae5dcc:   mov		x7, x13
   9.59%          ??         0x000000012fae5dd0:   cmp		x7, x23
   0.16%  ?       ??         0x000000012fae5dd4:   b.ge		#0x12fae5e3c        ;*lreturn {reexecute=0 rethrow=0 return_oop=0}
          ?       ??                                                                   ; - java.lang.Math::max@11 (line 2038)
          ?       ??                                                                   ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
          ?       ??                                                                   ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
  11.06%  ?       ???        0x000000012fae5dd8:   add		w11, w11, #8        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ?       ???                                                                  ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@30 (line 294)
          ?       ???                                                                  ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.05%  ?       ???        0x000000012fae5ddc:   cmp		w11, w14
   0.00%  ??      ???        0x000000012fae5de0:   b.ge		#0x12fae5e74        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          ??      ???                                                                  ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
          ??      ???                                                                  ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
          ??      ???        0x000000012fae5de4:   mov		x25, x23            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          ??      ???                                                                  ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@14 (line 295)
          ??      ???                                                                  ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
          ??      ???        0x000000012fae5de8:   add		x13, x4, w11, sxtw #3
          ??      ???        0x000000012fae5dec:   ldr		x23, [x13, #0x48]
   0.00%  ??      ???        0x000000012fae5df0:   ldp		x5, x6, [x13, #0x10]
   0.03%  ??      ???        0x000000012fae5df4:   ldr		x7, [x13, #0x40]
   0.01%  ??      ???        0x000000012fae5df8:   ldp		x21, x22, [x13, #0x20]
  11.10%  ??      ???        0x000000012fae5dfc:   ldp		x24, x13, [x13, #0x30];*laload {reexecute=0 rethrow=0 return_oop=0}
          ??      ???                                                                  ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@20 (line 295)
          ??      ???                                                                  ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
          ??      ???        0x000000012fae5e00:   cmp		x25, x5
   0.01%  ???     ???        0x000000012fae5e04:   b.ge		#0x12fae5e6c
  10.83%  ???     ???     ?  0x000000012fae5e08:   cmp		x5, x6
   0.14%  ????    ???     ?  0x000000012fae5e0c:   b.ge		#0x12fae5e44
  10.79%  ????    ????    ?  0x000000012fae5e10:   cmp		x6, x21
   0.27%  ?????   ????    ?  0x000000012fae5e14:   b.ge		#0x12fae5e64
  10.53%  ?????   ????   ??  0x000000012fae5e18:   cmp		x21, x22
   0.33%  ??????  ????   ??  0x000000012fae5e1c:   b.ge		#0x12fae5e4c
  10.63%  ??????  ?????  ??  0x000000012fae5e20:   cmp		x22, x24
   0.23%  ??????? ?????  ??  0x000000012fae5e24:   b.ge		#0x12fae5e54
  10.74%  ??????? ?????? ??  0x000000012fae5e28:   cmp		x24, x13
   0.08%  ?????????????? ??  0x000000012fae5e2c:   b.ge		#0x12fae5e5c        ;*lreturn {reexecute=0 rethrow=0 return_oop=0}
          ?????????????? ??                                                            ; - java.lang.Math::max@11 (line 2038)
          ?????????????? ??                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
          ?????????????? ??                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
  11.29%  ?????????????????  0x000000012fae5e30:   cmp		x13, x7
          ?????????????????  0x000000012fae5e34:   b.lt		#0x12fae5dd0        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
          ???????? ????????                                                            ; - java.lang.Math::max@3 (line 2038)
          ???????? ????????                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
          ???????? ????????                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.01%  ???????? ????????  0x000000012fae5e38:   b		#0x12fae5dcc
   0.03%  ????????  ???????  0x000000012fae5e3c:   mov		x23, x7
           ???????  ???????  0x000000012fae5e40:   b		#0x12fae5dd8
           ???????   ??????  0x000000012fae5e44:   mov		x6, x5
           ?? ????   ??????  0x000000012fae5e48:   b		#0x12fae5e10
           ?? ????    ?????  0x000000012fae5e4c:   mov		x22, x21
           ?? ? ??    ?????  0x000000012fae5e50:   b		#0x12fae5e20
   0.01%   ?? ? ??     ????  0x000000012fae5e54:   mov		x24, x22
           ?? ?  ?     ????  0x000000012fae5e58:   b		#0x12fae5e28
           ?? ?  ?      ???  0x000000012fae5e5c:   mov		x13, x24
           ?? ?         ???  0x000000012fae5e60:   b		#0x12fae5e30
   0.00%   ?? ?          ??  0x000000012fae5e64:   mov		x21, x6
           ??            ??  0x000000012fae5e68:   b		#0x12fae5e18
   0.00%   ??             ?  0x000000012fae5e6c:   mov		x5, x25
           ?              ?  0x000000012fae5e70:   b		#0x12fae5e08
           ?                 0x000000012fae5e74:   ldr		x5, [x28, #0x30]    ; ImmutableOopMap {r16=Oop c_rarg0=Oop c_rarg2=Oop c_rarg3=Oop c_rarg1=Derived_oop_c_rarg3 c_rarg4=Oop r19=Oop }
                                                                                       ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                                       ; - (reexecute) org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@33 (line 294)
                                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                             0x000000012fae5e78:   ldr		wzr, [x5]           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@33 (line 294)
                                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                                                                                       ;   {poll}
                             0x000000012fae5e7c:   cmp		w11, w12
....................................................................................................
#+end_src
** Branch Never
*** release
#+begin_src bash
Benchmark                              (probability)  (size)   Mode  Cnt     Score     Error   Units
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  2321.742 ? 289.782  ops/ms
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  3637.567 ?  84.313  ops/ms
#+end_src
*** profiler
**** longReductionMultiplyMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub, version 5, compile id 561

                 0x0000000117b6fddc:   cmp		w10, #0xfa0
                 0x0000000117b6fde0:   csel		w11, w14, w10, hi
                 0x0000000117b6fde4:   add		w10, w11, w12
                 0x0000000117b6fde8:   nop
                 0x0000000117b6fdec:   nop		                    ;*ldc2_w {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@14 (line 285)
                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
              ?  0x0000000117b6fdf0:   add		x11, x6, w12, sxtw #3;*laload {reexecute=0 rethrow=0 return_oop=0}
              ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@23 (line 285)
              ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.03%      ?  0x0000000117b6fdf4:   ldp		x21, x22, [x11, #0x10]
   0.01%      ?  0x0000000117b6fdf8:   ldr		x23, [x11, #0x20]
              ?  0x0000000117b6fdfc:   mul		x21, x21, x16
  27.63%      ?  0x0000000117b6fe00:   ldr		x11, [x11, #0x28]
              ?  0x0000000117b6fe04:   mul		x22, x22, x16
              ?  0x0000000117b6fe08:   mul		x23, x23, x16
              ?  0x0000000117b6fe0c:   mov		x24, x21
   2.30%      ?  0x0000000117b6fe10:   cmp		x21, x7
          ?   ?  0x0000000117b6fe14:   b.ge		#0x117b6fe1c
          ?   ?  0x0000000117b6fe18:   mov		x24, x7
  17.59%  ?   ?  0x0000000117b6fe1c:   mul		x11, x11, x16
              ?  0x0000000117b6fe20:   mov		x7, x22
              ?  0x0000000117b6fe24:   cmp		x22, x24
           ?  ?  0x0000000117b6fe28:   b.ge		#0x117b6fe30
           ?  ?  0x0000000117b6fe2c:   mov		x7, x24
  14.37%   ?  ?  0x0000000117b6fe30:   mov		x21, x23
   0.11%      ?  0x0000000117b6fe34:   cmp		x23, x7
   2.30%    ? ?  0x0000000117b6fe38:   b.ge		#0x117b6fe40
            ? ?  0x0000000117b6fe3c:   mov		x21, x7
  15.95%    ? ?  0x0000000117b6fe40:   add		w12, w12, #4        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
              ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@34 (line 284)
              ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
              ?  0x0000000117b6fe44:   mov		x7, x11
              ?  0x0000000117b6fe48:   cmp		x11, x21
             ??  0x0000000117b6fe4c:   b.ge		#0x117b6fe54
             ??  0x0000000117b6fe50:   mov		x7, x21             ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
             ??                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
             ??                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
  18.36%     ??  0x0000000117b6fe54:   cmp		w12, w10
              ?  0x0000000117b6fe58:   b.lt		#0x117b6fdf0        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@11 (line 284)
                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.73%         0x0000000117b6fe5c:   ldr		x21, [x28, #0x30]   ; ImmutableOopMap {c_rarg0=Oop c_rarg2=Oop c_rarg3=Oop c_rarg5=Oop c_rarg4=Derived_oop_c_rarg5 c_rarg6=Oop r19=Oop }
                                                                           ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                           ; - (reexecute) org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@37 (line 284)
                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.09%         0x0000000117b6fe60:   ldr		wzr, [x21]          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@37 (line 284)
                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
                                                                           ;   {poll}
                 0x0000000117b6fe64:   cmp		w12, w17
                 0x0000000117b6fe68:   b.lt		#0x117b6fdd0
                 0x0000000117b6fe6c:   cmp		w12, w13
                 0x0000000117b6fe70:   b.lt		#0x117b6fd28
....................................................................................................
#+end_src
**** longReductionSimpleMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub, version 5, compile id 542 

                                 0x0000000113951b4c:   stp		x17, x15, [sp, #0x10]
                                 0x0000000113951b50:   str		x20, [sp, #0x60]
                                 0x0000000113951b54:   nop		
                                 0x0000000113951b58:   nop		
                                 0x0000000113951b5c:   nop		                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@14 (line 295)
                                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                          ?      0x0000000113951b60:   add		x27, x24, w12, sxtw #3;*laload {reexecute=0 rethrow=0 return_oop=0}
                          ?                                                                ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@20 (line 295)
                          ?                                                                ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   5.80%                  ?      0x0000000113951b64:   ldr		x15, [x27, #0x10]
   0.05%                  ?      0x0000000113951b68:   mov		x29, x25
   0.04%                  ?      0x0000000113951b6c:   cmp		x25, x15
   0.13%  ?               ?      0x0000000113951b70:   b.ge		#0x113951b78
          ?               ?      0x0000000113951b74:   mov		x29, x15
   5.50%  ?               ?      0x0000000113951b78:   ldr		x16, [x27, #0x18]
   0.14%                  ?      0x0000000113951b7c:   mov		x15, x29
   0.19%                  ?      0x0000000113951b80:   cmp		x29, x16
   0.15%   ?              ?      0x0000000113951b84:   b.ge		#0x113951b8c
           ?              ?      0x0000000113951b88:   mov		x15, x16
   5.22%   ?              ?      0x0000000113951b8c:   ldr		x17, [x27, #0x20]
   0.07%                  ?      0x0000000113951b90:   mov		x16, x15
   0.03%                  ?      0x0000000113951b94:   cmp		x15, x17
   0.07%    ?             ?      0x0000000113951b98:   b.ge		#0x113951ba0
            ?             ?      0x0000000113951b9c:   mov		x16, x17
   5.39%    ?             ?      0x0000000113951ba0:   ldr		x0, [x27, #0x28]
   0.07%                  ?      0x0000000113951ba4:   mov		x15, x16
   0.16%                  ?      0x0000000113951ba8:   cmp		x16, x0
   0.11%     ?            ?      0x0000000113951bac:   b.ge		#0x113951bb4
             ?            ?      0x0000000113951bb0:   mov		x15, x0
   5.31%     ?            ?      0x0000000113951bb4:   ldr		x1, [x27, #0x30]
   0.04%                  ?      0x0000000113951bb8:   mov		x16, x15
   0.11%                  ?      0x0000000113951bbc:   cmp		x15, x1
   0.03%      ?           ?      0x0000000113951bc0:   b.ge		#0x113951bc8
              ?           ?      0x0000000113951bc4:   mov		x16, x1
   5.33%      ?           ?      0x0000000113951bc8:   ldr		x2, [x27, #0x38]
   0.08%                  ?      0x0000000113951bcc:   mov		x15, x16
   0.17%                  ?      0x0000000113951bd0:   cmp		x16, x2
   0.11%       ?          ?      0x0000000113951bd4:   b.ge		#0x113951bdc
               ?          ?      0x0000000113951bd8:   mov		x15, x2
   5.79%       ?          ?      0x0000000113951bdc:   ldr		x3, [x27, #0x40]
   0.07%                  ?      0x0000000113951be0:   mov		x16, x15
   0.04%                  ?      0x0000000113951be4:   cmp		x15, x3
   0.02%        ?         ?      0x0000000113951be8:   b.ge		#0x113951bf0
                ?         ?      0x0000000113951bec:   mov		x16, x3
   5.32%        ?         ?      0x0000000113951bf0:   ldr		x4, [x27, #0x48]
   0.08%                  ?      0x0000000113951bf4:   mov		x15, x16
   0.07%                  ?      0x0000000113951bf8:   cmp		x16, x4
   0.07%         ?        ?      0x0000000113951bfc:   b.ge		#0x113951c04
   0.00%         ?        ?      0x0000000113951c00:   mov		x15, x4
   5.77%         ?        ?      0x0000000113951c04:   ldr		x5, [x27, #0x50]
   0.08%                  ?      0x0000000113951c08:   mov		x16, x15
   0.04%                  ?      0x0000000113951c0c:   cmp		x15, x5
   0.04%          ?       ?      0x0000000113951c10:   b.ge		#0x113951c18
                  ?       ?      0x0000000113951c14:   mov		x16, x5
   5.42%          ?       ?      0x0000000113951c18:   ldr		x6, [x27, #0x58]
   0.09%                  ?      0x0000000113951c1c:   mov		x15, x16
   0.15%                  ?      0x0000000113951c20:   cmp		x16, x6
   0.08%           ?      ?      0x0000000113951c24:   b.ge		#0x113951c2c
                   ?      ?      0x0000000113951c28:   mov		x15, x6
   5.49%           ?      ?      0x0000000113951c2c:   ldr		x7, [x27, #0x60]
   0.11%                  ?      0x0000000113951c30:   mov		x16, x15
   0.06%                  ?      0x0000000113951c34:   cmp		x15, x7
   0.06%            ?     ?      0x0000000113951c38:   b.ge		#0x113951c40
                    ?     ?      0x0000000113951c3c:   mov		x16, x7
   5.89%            ?     ?      0x0000000113951c40:   ldr		x20, [x27, #0x68]
   0.07%                  ?      0x0000000113951c44:   mov		x15, x16
   0.17%                  ?      0x0000000113951c48:   cmp		x16, x20
   0.02%             ?    ?      0x0000000113951c4c:   b.ge		#0x113951c54
                     ?    ?      0x0000000113951c50:   mov		x15, x20
   5.52%             ?    ?      0x0000000113951c54:   ldr		x22, [x27, #0x70]
   0.07%                  ?      0x0000000113951c58:   mov		x16, x15
   0.10%                  ?      0x0000000113951c5c:   cmp		x15, x22
   0.01%              ?   ?      0x0000000113951c60:   b.ge		#0x113951c68
                      ?   ?      0x0000000113951c64:   mov		x16, x22
   5.53%              ?   ?      0x0000000113951c68:   ldr		x23, [x27, #0x78]
   0.06%                  ?      0x0000000113951c6c:   mov		x15, x16
   0.14%                  ?      0x0000000113951c70:   cmp		x16, x23
   0.12%               ?  ?      0x0000000113951c74:   b.ge		#0x113951c7c
                       ?  ?      0x0000000113951c78:   mov		x15, x23
   5.58%               ?  ?      0x0000000113951c7c:   ldr		x26, [x27, #0x80]
   0.13%                  ?      0x0000000113951c80:   mov		x16, x15
   0.07%                  ?      0x0000000113951c84:   cmp		x15, x26
   0.14%                ? ?      0x0000000113951c88:   b.ge		#0x113951c90
                        ? ?      0x0000000113951c8c:   mov		x16, x26
   5.28%                ? ?      0x0000000113951c90:   ldr		x27, [x27, #0x88]
   0.04%                  ?      0x0000000113951c94:   add		w12, w12, #0x10     ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                          ?                                                                ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@30 (line 294)
                          ?                                                                ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.14%                  ?      0x0000000113951c98:   mov		x25, x16
   0.03%                  ?      0x0000000113951c9c:   cmp		x16, x27
   0.12%                 ??      0x0000000113951ca0:   b.ge		#0x113951ca8
   4.94%                 ??      0x0000000113951ca4:   mov		x25, x27            ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                         ??                                                                ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
                         ??                                                                ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.79%                 ??      0x0000000113951ca8:   cmp		w12, w11
   0.00%                  ?      0x0000000113951cac:   b.lt		#0x113951b60        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
                                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                                 0x0000000113951cb0:   ldr		x11, [x28, #0x30]   ; ImmutableOopMap {rlocals=Oop [0]=Oop [8]=Oop rdispatch=Derived_oop_[8] [16]=Oop [24]=Oop [96]=Oop }
                                                                                           ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                                           ; - (reexecute) org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@33 (line 294)
                                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.02%                         0x0000000113951cb4:   ldr		wzr, [x11]          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@33 (line 294)
                                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                                                                                           ;   {poll}
                                 0x0000000113951cb8:   cmp		w12, w10
                                 0x0000000113951cbc:   b.lt		#0x113951b20
                                 0x0000000113951cc0:   ldp		x16, x0, [sp]
                                 0x0000000113951cc4:   ldp		x17, x15, [sp, #0x10]
   0.02%                         0x0000000113951cc8:   ldr		x20, [sp, #0x60]
                                 0x0000000113951ccc:   cmp		w12, w14
                                 0x0000000113951cd0:   b.lt		#0x113951af8
                                 0x0000000113951cd4:   mov		x11, x25            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
                                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.01%                      ?  0x0000000113951cd8:   ldarb		w14, [x21]          ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                              ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@32 (line 107)
                              ?  0x0000000113951cdc:   ldr		x1, [x28, #0x30]
                              ?  0x0000000113951ce0:   add		x19, x19, #1        ; ImmutableOopMap {r15=Oop r16=Oop r17=Oop c_rarg0=Oop rdispatch=Derived_oop_c_rarg0 resp=Oop }
                              ?                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                              ?                                                            ; - (reexecute) org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@35 (line 107)
   0.03%                      ?  0x0000000113951ce4:   ldr		wzr, [x1]           ;   {poll}
                              ?  0x0000000113951ce8:   cbnz		w14, #0x113951aa8   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                              ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@38 (line 108)
   0.00%                      ?  0x0000000113951cec:   ldr		w14, [x15, #0xc]    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                              ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@8 (line 294)
                              ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                              ?  0x0000000113951cf0:   cmp		w14, #0
                           ?  ?  0x0000000113951cf4:   b.le		#0x113951d60        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                           ?  ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
                           ?  ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                           ?  ?  0x0000000113951cf8:   ldr		w10, [x15, #0x2c]
                           ?  ?  0x0000000113951cfc:   lsl		x24, x10, #3        ;*getfield maxLongA {reexecute=0 rethrow=0 return_oop=0}
                           ?  ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@15 (line 295)
                           ?  ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.04%                   ?  ?  0x0000000113951d00:   ldr		w10, [x24, #0xc]    ; implicit exception: dispatches to 0x0000000113951d68
                           ?  ?                                                            ;*laload {reexecute=0 rethrow=0 return_oop=0}
                           ?  ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@20 (line 295)
                           ?  ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                           ?  ?  0x0000000113951d04:   sxtw		x11, w14
                           ?  ?  0x0000000113951d08:   sub		x1, x11, #0xf
                           ?  ?  0x0000000113951d0c:   sxtw		x12, w10
                           ?  ?  0x0000000113951d10:   sub		x11, x11, #1
                           ?  ?  0x0000000113951d14:   cbz		w10, #0x113951d68
   0.01%                   ?  ?  0x0000000113951d18:   cmp		x11, x12
                           ?  ?  0x0000000113951d1c:   b.hs		#0x113951d68
   0.05%                   ?  ?  0x0000000113951d20:   ldr		x11, [x24, #0x10]
   0.00%                   ?  ?  0x0000000113951d24:   mov		x12, #-0x80000000
                           ?  ?  0x0000000113951d28:   mov		x10, x1
                           ?  ?  0x0000000113951d2c:   cmp		x1, x12
                           ?? ?  0x0000000113951d30:   b.ge		#0x113951d38
                           ?? ?  0x0000000113951d34:   mov		x10, x12
   0.01%                   ?? ?  0x0000000113951d38:   mov		x12, xzr
                           ?  ?  0x0000000113951d3c:   mov		w10, w10
                           ?  ?  0x0000000113951d40:   mov		x25, x11
                           ?  ?  0x0000000113951d44:   cmp		x11, x12
                           ? ??  0x0000000113951d48:   b.ge		#0x113951d50
                           ? ??  0x0000000113951d4c:   mov		x25, x12            ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                           ? ??                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
                           ? ??                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.04%                   ? ??  0x0000000113951d50:   cmp		w10, #1
                           ?  ?  0x0000000113951d54:   b.le		#0x113951d90
                           ?  ?  0x0000000113951d58:   mov		w12, #1
                           ?  ?  0x0000000113951d5c:   b		#0x113951b2c
                           ?  ?  0x0000000113951d60:   mov		x11, xzr
                              ?  0x0000000113951d64:   b		#0x113951cd8        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                           ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
                                                                                           ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                                 0x0000000113951d68:   mov		w1, #-0x92
....................................................................................................
#+end_src
** Branch Always
*** release
#+begin_src bash
Benchmark                              (probability)  (size)   Mode  Cnt    Score    Error   Units
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  914.140 ? 30.055  ops/ms
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  928.003 ? 23.162  ops/ms
#+end_src
*** profiler
**** longReductionMultiplyMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub, version 5, compile id 560 

                0x0000000116f545b0:   str		xzr, [x19, #0x20]   ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@48 (line 109)
                0x0000000116f545b4:   str		x0, [x19, #0x30]    ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@42 (line 108)
                0x0000000116f545b8:   ldp		x29, x30, [sp, #0x50]
                0x0000000116f545bc:   add		sp, sp, #0x60
                0x0000000116f545c0:   ldr		x8, [x28, #0x28]    ;   {poll_return}
                0x0000000116f545c4:   cmp		sp, x8
                0x0000000116f545c8:   b.hi		#0x116f547e8
                0x0000000116f545cc:   ret		
   9.68%   ?    0x0000000116f545d0:   mov		x7, x17             ;*ldc2_w {reexecute=0 rethrow=0 return_oop=0}
           ?                                                              ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@14 (line 285)
           ?                                                              ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)















           ?    0x0000000116f545d4:   add		x10, x6, w12, sxtw #3
  49.69%   ?    0x0000000116f545d8:   ldr		x10, [x10, #0x10]
           ?    0x0000000116f545dc:   mul		x10, x10, x16
           ?    0x0000000116f545e0:   add		w12, w12, #1        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ?                                                              ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@34 (line 284)
           ?                                                              ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
           ?    0x0000000116f545e4:   mov		x17, x10
           ?    0x0000000116f545e8:   cmp		x7, x10
          ??    0x0000000116f545ec:   b.lt		#0x116f545f0        ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
          ??                                                              ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
          ??                                                              ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
  40.26%  ??    0x0000000116f545f0:   cmp		w12, w13
           ?    0x0000000116f545f4:   b.lt		#0x116f545d0        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@11 (line 284)
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.07%        0x0000000116f545f8:   ldarb		w11, [x4]           ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@32 (line 107)
                0x0000000116f545fc:   ldr		x12, [x28, #0x30]
                0x0000000116f54600:   add		x20, x20, #1        ; ImmutableOopMap {c_rarg0=Oop c_rarg2=Oop c_rarg3=Oop c_rarg5=Oop c_rarg4=Derived_oop_c_rarg5 r19=Oop }
                                                                          ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                                          ; - (reexecute) org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@35 (line 107)
   0.02%        0x0000000116f54604:   ldr		wzr, [x12]          ;   {poll}
                0x0000000116f54608:   cbnz		w11, #0x116f54584   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@38 (line 108)
                0x0000000116f5460c:   ldr		w13, [x0, #0xc]     ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@8 (line 284)
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
                0x0000000116f54610:   cmp		w13, #0
                0x0000000116f54614:   b.le		#0x116f5470c        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@11 (line 284)
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
                0x0000000116f54618:   ldr		w10, [x0, #0x2c]
                0x0000000116f5461c:   lsl		x6, x10, #3         ;*getfield maxLongA {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@18 (line 285)
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.02%        0x0000000116f54620:   ldr		w12, [x6, #0xc]     ; implicit exception: dispatches to 0x0000000116f54714
                                                                          ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@23 (line 285)
                                                                          ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
                0x0000000116f54624:   sxtw		x10, w13
                0x0000000116f54628:   sub		x11, x10, #3
                0x0000000116f5462c:   mov		x17, x1
                0x0000000116f54630:   cmp		x11, x1
            ?   0x0000000116f54634:   b.lt		#0x116f54638
   0.00%    ?   0x0000000116f54638:   sxtw		x7, w12
                0x0000000116f5463c:   sub		x10, x10, #1
                0x0000000116f54640:   mov		w17, w17
                0x0000000116f54644:   cbz		w12, #0x116f54714
   0.00%        0x0000000116f54648:   cmp		x10, x7
                0x0000000116f5464c:   b.hs		#0x116f54714
   0.00%        0x0000000116f54650:   ldr		x10, [x6, #0x10]
                0x0000000116f54654:   mul		x10, x10, x16
                0x0000000116f54658:   mov		x7, x15
                0x0000000116f5465c:   cmp		x10, x15
             ?  0x0000000116f54660:   b.lt		#0x116f54664        ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
             ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
             ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
             ?  0x0000000116f54664:   cmp		w17, #1
                0x0000000116f54668:   b.le		#0x116f5473c
                0x0000000116f5466c:   mov		w12, #1
                0x0000000116f54670:   cmp		w17, w12
....................................................................................................
#+end_src
**** longReductionSimpleMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub, version 5, compile id 537 

              0x0000000115b4df04:   str		xzr, [x20, #0x20]   ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@48 (line 109)
              0x0000000115b4df08:   str		x0, [x20, #0x30]    ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@42 (line 108)
              0x0000000115b4df0c:   ldp		x29, x30, [sp, #0x50]
              0x0000000115b4df10:   add		sp, sp, #0x60
              0x0000000115b4df14:   ldr		x8, [x28, #0x28]    ;   {poll_return}
              0x0000000115b4df18:   cmp		sp, x8
              0x0000000115b4df1c:   b.hi		#0x115b4e214
              0x0000000115b4df20:   ret		
   8.63%   ?  0x0000000115b4df24:   mov		x25, x11            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@14 (line 295)
           ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
           ?  0x0000000115b4df28:   add		x10, x24, w12, sxtw #3
  49.92%   ?  0x0000000115b4df2c:   ldr		x10, [x10, #0x10]
           ?  0x0000000115b4df30:   add		w12, w12, #1        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@30 (line 294)
           ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
           ?  0x0000000115b4df34:   mov		x11, x10
           ?  0x0000000115b4df38:   cmp		x25, x10
          ??  0x0000000115b4df3c:   b.lt		#0x115b4df40        ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
          ??                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
          ??                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
  41.12%  ??  0x0000000115b4df40:   cmp		w12, w14
           ?  0x0000000115b4df44:   b.lt		#0x115b4df24        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
                                                                        ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.04%      0x0000000115b4df48:   b		#0x115b4e0b8
              0x0000000115b4df4c:   ldp		x16, x0, [sp]
              0x0000000115b4df50:   ldp		x17, x15, [sp, #0x10]
              0x0000000115b4df54:   ldr		x20, [sp, #0x60]
              0x0000000115b4df58:   cmp		w10, w12
              0x0000000115b4df5c:   sub		w1, w10, w12
              0x0000000115b4df60:   csel		w1, wzr, w1, lt
              0x0000000115b4df64:   mov		w8, #0x3e80
              0x0000000115b4df68:   cmp		w1, w8
....................................................................................................
#+end_src
** CMov
*** release
#+begin_src bash
Benchmark                              (probability)  (size)   Mode  Cnt     Score    Error   Units
MinMaxVector.longReductionMultiplyMax            100    2048  thrpt    8  1023.075 ? 73.846  ops/ms
MinMaxVector.longReductionSimpleMax              100    2048  thrpt    8  1105.859 ?  5.286  ops/ms
#+end_src
*** profiler
**** longReductionMultiplyMax
#+begin_src bash
....[Hottest Region 1]..............................................................................
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub, version 5, compile id 559 

             0x000000012fae6944:   add		w11, w12, w13
             0x000000012fae6948:   nop		
             0x000000012fae694c:   nop		                    ;*ldc2_w {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@14 (line 285)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
          ?  0x000000012fae6950:   add		x12, x6, w13, sxtw #3;*laload {reexecute=0 rethrow=0 return_oop=0}
          ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@23 (line 285)
          ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
          ?  0x000000012fae6954:   ldp		x21, x22, [x12, #0x10]
          ?  0x000000012fae6958:   mul		x21, x21, x17
   0.01%  ?  0x000000012fae695c:   ldr		x23, [x12, #0x20]
          ?  0x000000012fae6960:   mul		x22, x22, x17
          ?  0x000000012fae6964:   cmp		x21, x7
   0.08%  ?  0x000000012fae6968:   ldr		x12, [x12, #0x28]
   0.00%  ?  0x000000012fae696c:   csel		x7, x21, x7, gt
          ?  0x000000012fae6970:   mul		x21, x23, x17
          ?  0x000000012fae6974:   cmp		x22, x7
          ?  0x000000012fae6978:   csel		x7, x22, x7, gt
   0.02%  ?  0x000000012fae697c:   mul		x12, x12, x17
   2.37%  ?  0x000000012fae6980:   cmp		x21, x7
  74.76%  ?  0x000000012fae6984:   csel		x7, x21, x7, gt
   4.96%  ?  0x000000012fae6988:   cmp		x12, x7
   4.78%  ?  0x000000012fae698c:   add		w13, w13, #4        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@34 (line 284)
          ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   5.15%  ?  0x000000012fae6990:   csel		x7, x12, x7, gt     ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
          ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@30 (line 286)
          ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   7.16%  ?  0x000000012fae6994:   cmp		w13, w11
          ?  0x000000012fae6998:   b.lt		#0x12fae6950        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@11 (line 284)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.34%     0x000000012fae699c:   ldr		x21, [x28, #0x30]   ; ImmutableOopMap {c_rarg0=Oop c_rarg2=Oop c_rarg3=Oop c_rarg5=Oop c_rarg4=Derived_oop_c_rarg5 c_rarg6=Oop r19=Oop }
                                                                       ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@37 (line 284)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
   0.03%     0x000000012fae69a0:   ldr		wzr, [x21]          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionMultiplyMax@37 (line 284)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionMultiplyMax_jmhTest::longReductionMultiplyMax_thrpt_jmhStub@19 (line 105)
                                                                       ;   {poll}
             0x000000012fae69a4:   cmp		w13, w15
             0x000000012fae69a8:   b.lt		#0x12fae6930
             0x000000012fae69ac:   cmp		w13, w10
             0x000000012fae69b0:   b.lt		#0x12fae68a0
....................................................................................................
#+end_src
**** longReductionSimpleMax
#+begin_src bash
C2, level 4, org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub, version 5, compile id 558 

             0x0000000114f3c8f0:   csel		w11, wzr, w12, lt
             0x0000000114f3c8f4:   mov		w8, #0x3e80
             0x0000000114f3c8f8:   cmp		w11, w8
             0x0000000114f3c8fc:   csel		w11, w14, w11, hi
             0x0000000114f3c900:   add		w12, w11, w3
             0x0000000114f3c904:   nop		
             0x0000000114f3c908:   nop		
             0x0000000114f3c90c:   nop		                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@14 (line 295)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.00%  ?  0x0000000114f3c910:   add		x21, x5, w3, sxtw #3;*laload {reexecute=0 rethrow=0 return_oop=0}
          ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@20 (line 295)
          ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.01%  ?  0x0000000114f3c914:   ldr		x11, [x21, #0x10]
          ?  0x0000000114f3c918:   cmp		x6, x11
   0.01%  ?  0x0000000114f3c91c:   ldr		x7, [x21, #0x18]
          ?  0x0000000114f3c920:   csel		x11, x6, x11, gt
          ?  0x0000000114f3c924:   cmp		x11, x7
   0.01%  ?  0x0000000114f3c928:   ldr		x6, [x21, #0x20]
          ?  0x0000000114f3c92c:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c930:   cmp		x11, x6
   0.02%  ?  0x0000000114f3c934:   ldr		x7, [x21, #0x28]
          ?  0x0000000114f3c938:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c93c:   cmp		x11, x7
   0.00%  ?  0x0000000114f3c940:   ldr		x6, [x21, #0x30]
          ?  0x0000000114f3c944:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c948:   cmp		x11, x6
   0.01%  ?  0x0000000114f3c94c:   ldr		x7, [x21, #0x38]
          ?  0x0000000114f3c950:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c954:   cmp		x11, x7
   1.03%  ?  0x0000000114f3c958:   ldr		x6, [x21, #0x40]
   0.24%  ?  0x0000000114f3c95c:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c960:   cmp		x11, x6
   2.91%  ?  0x0000000114f3c964:   ldr		x7, [x21, #0x48]
          ?  0x0000000114f3c968:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c96c:   cmp		x11, x7
   2.54%  ?  0x0000000114f3c970:   ldr		x6, [x21, #0x50]
          ?  0x0000000114f3c974:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c978:   cmp		x11, x6
   4.65%  ?  0x0000000114f3c97c:   ldr		x7, [x21, #0x58]
          ?  0x0000000114f3c980:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c984:   cmp		x11, x7
   6.08%  ?  0x0000000114f3c988:   ldr		x6, [x21, #0x60]
          ?  0x0000000114f3c98c:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c990:   cmp		x11, x6
   5.08%  ?  0x0000000114f3c994:   ldr		x7, [x21, #0x68]
          ?  0x0000000114f3c998:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c99c:   cmp		x11, x7
   5.66%  ?  0x0000000114f3c9a0:   ldr		x6, [x21, #0x70]
          ?  0x0000000114f3c9a4:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c9a8:   cmp		x11, x6
   5.49%  ?  0x0000000114f3c9ac:   ldr		x7, [x21, #0x78]
          ?  0x0000000114f3c9b0:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c9b4:   cmp		x11, x7
   5.43%  ?  0x0000000114f3c9b8:   ldr		x6, [x21, #0x80]
   0.05%  ?  0x0000000114f3c9bc:   csel		x11, x11, x7, gt
          ?  0x0000000114f3c9c0:   cmp		x11, x6
  59.60%  ?  0x0000000114f3c9c4:   ldr		x7, [x21, #0x88]
          ?  0x0000000114f3c9c8:   csel		x11, x11, x6, gt
          ?  0x0000000114f3c9cc:   cmp		x11, x7
          ?  0x0000000114f3c9d0:   add		w3, w3, #0x10       ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@30 (line 294)
          ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
          ?  0x0000000114f3c9d4:   csel		x6, x11, x7, gt     ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
          ?                                                            ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@26 (line 296)
          ?                                                            ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
          ?  0x0000000114f3c9d8:   cmp		w3, w12
          ?  0x0000000114f3c9dc:   b.lt		#0x114f3c910        ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@11 (line 294)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.31%     0x0000000114f3c9e0:   ldr		x7, [x28, #0x30]    ; ImmutableOopMap {r13=Oop r15=Oop c_rarg2=Oop c_rarg4=Oop c_rarg1=Derived_oop_c_rarg4 c_rarg5=Oop r19=Oop }
                                                                       ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@33 (line 294)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
   0.02%     0x0000000114f3c9e4:   ldr		wzr, [x7]           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - org.openjdk.bench.java.lang.MinMaxVector::longReductionSimpleMax@33 (line 294)
                                                                       ; - org.openjdk.bench.java.lang.jmh_generated.MinMaxVector_longReductionSimpleMax_jmhTest::longReductionSimpleMax_thrpt_jmhStub@19 (line 105)
                                                                       ;   {poll}
             0x0000000114f3c9e8:   cmp		w3, w0
             0x0000000114f3c9ec:   b.lt		#0x114f3c8e8
             0x0000000114f3c9f0:   cmp		w3, w10
             0x0000000114f3c9f4:   b.lt		#0x114f3c860
....................................................................................................
#+end_src
* 28.3.25
Added jmh code to resolve xctrace out of SDKROOT.
Created https://bugs.openjdk.org/browse/CODETOOLS-7903982 to improve that.

Tried to run benchmark with that but failed:
#+begin_src bash
TEST="micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax" MICRO="OPTIONS=-p probability=100 -jvmArgs -XX:-UseSuperWord -prof xctraceasm -v EXTRA;FORK=1" CONF=release BUILD_LOG=warn make test
pushd /Users/galder/1/jdk-avoid-cmov-long-min-max
CONF=release-darwin-arm64 make -s
popd
touch /Users/galder/1/jdk-avoid-cmov-long-min-max/build/release-darwin-arm64/jdk/bin/java
~/1/jdk-avoid-cmov-long-min-max ~/1/colata/avoid-cmov-long-min-max-8351409
Building target 'default (exploded-image)' in configuration 'release-darwin-arm64'
Finished building target 'default (exploded-image)' in configuration 'release-darwin-arm64'
~/1/colata/avoid-cmov-long-min-max-8351409
cd /Users/galder/1/jdk-avoid-cmov-long-min-max
CONF=release-darwin-arm64 make test
make[1]: Entering directory '/Users/galder/1/jdk-avoid-cmov-long-min-max'
Building target 'test' in configuration 'release-darwin-arm64'
Running tests using MICRO control variable 'OPTIONS=-p probability=100 -jvmArgs -XX:-UseSuperWord -prof xctraceasm -v EXTRA;FORK=1'
Test selection 'micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax', will run:
 micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax

Running test 'micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax'
Profilers failed to initialize, exiting.
"xctrace version" failed: [dyld[99580]: Library not loaded: @rpath/XCTraceCore.framework/Versions/A/XCTraceCore
  Referenced from: <05ABD51C-583F-305C-BAC6-95F050084452> /nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Developer/usr/bin/xctrace
  Reason: tried: '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/SharedFrameworks/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Independence/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Frameworks/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/SharedFrameworks/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Independence/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file), '/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Frameworks/XCTraceCore.framework/Versions/A/XCTraceCore' (no such file)
]
Finished running test 'micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax'
Test report is stored in build/release-darwin-arm64/test-results/micro_org_openjdk_bench_java_lang_MinMaxVector_longReductionMultiplyMax

==============================
Test summary
==============================
   TEST                                              TOTAL  PASS  FAIL ERROR  SKIP   
   micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax
>>                                                       1     0     0     1     0 <<
==============================
TEST FAILURE

make[2]: *** [/Users/galder/1/jdk-avoid-cmov-long-min-max/make/Init.gmk:150: main] Error 1
make[1]: *** [/Users/galder/1/jdk-avoid-cmov-long-min-max/make/PreInit.gmk:159: test] Error 2
make[1]: Leaving directory '/Users/galder/1/jdk-avoid-cmov-long-min-max'
make: *** [../nix-make/OpenJDK.gmk:103: test] Error 2
#+end_src
The issue is that XCTraceCore is not in the devkit.
Created https://bugs.openjdk.org/browse/JDK-8353177

Added XCTraceCore to the devkit and tried again,
but something else is missing, ~InstrumentsTrace~:
#+begin_src bash
[nix-shell:~/1/colata/avoid-cmov-long-min-max-8351409]$ TEST="micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax" MICRO="OPTIONS=-p probability=100 -jvmArgs -XX:-UseSuperWord -prof xctraceasm -v EXTRA;FORK=1" CONF=release BUILD_LOG=warn make test
pushd /Users/galder/1/jdk-avoid-cmov-long-min-max
CONF=release-darwin-arm64 make -s
popd
touch /Users/galder/1/jdk-avoid-cmov-long-min-max/build/release-darwin-arm64/jdk/bin/java
~/1/jdk-avoid-cmov-long-min-max ~/1/colata/avoid-cmov-long-min-max-8351409
Building target 'default (exploded-image)' in configuration 'release-darwin-arm64'
Finished building target 'default (exploded-image)' in configuration 'release-darwin-arm64'
~/1/colata/avoid-cmov-long-min-max-8351409
cd /Users/galder/1/jdk-avoid-cmov-long-min-max
CONF=release-darwin-arm64 make test
make[1]: Entering directory '/Users/galder/1/jdk-avoid-cmov-long-min-max'
Building target 'test' in configuration 'release-darwin-arm64'
Running tests using MICRO control variable 'OPTIONS=-p probability=100 -jvmArgs -XX:-UseSuperWord -prof xctraceasm -v EXTRA;FORK=1'
Test selection 'micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax', will run:
 micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax

Running test 'micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax'
Profilers failed to initialize, exiting.
"xctrace version" failed: [dyld[24506]: Library not loaded: @rpath/InstrumentsTrace.framework/Versions/A/InstrumentsTrace
  Referenced from: <EC019860-6E8F-343C-82AA-B9F9374E9129> /nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/XCTraceCore.framework/Versions/A/XCTraceCore
  Reason: tried: '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/XCTraceCore.framework/Versions/A/../../../InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/XCTraceCore.framework/Versions/A/../../../../../../../SharedFrameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/XCTraceCore.framework/Versions/A/../../../../Independence/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/SharedFrameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Independence/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Frameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/SharedFrameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Independence/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file), '/nix/store/fqdg3ybx87d3kpg2gqqxl5h4xlwj4wrq-Xcode16.2-MacOSX15/Xcode/Contents/Developer/Frameworks/InstrumentsTrace.framework/Versions/A/InstrumentsTrace' (no such file)
]
Finished running test 'micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax'
Test report is stored in build/release-darwin-arm64/test-results/micro_org_openjdk_bench_java_lang_MinMaxVector_longReductionMultiplyMax

==============================
Test summary
==============================
   TEST                                              TOTAL  PASS  FAIL ERROR  SKIP   
   micro:org.openjdk.bench.java.lang.MinMaxVector.longReductionMultiplyMax
>>                                                       1     0     0     1     0 <<
==============================
TEST FAILURE

make[2]: *** [/Users/galder/1/jdk-avoid-cmov-long-min-max/make/Init.gmk:150: main] Error 1
make[1]: *** [/Users/galder/1/jdk-avoid-cmov-long-min-max/make/PreInit.gmk:159: test] Error 2
make[1]: Leaving directory '/Users/galder/1/jdk-avoid-cmov-long-min-max'
make: *** [../nix-make/OpenJDK.gmk:104: test] Error 2
#+end_src
* 27.3.25
To breakpoint to .ad being called,
try putting breakpoint in MatchOper::reg
#+begin_src bash
MachOper::reg(PhaseRegAlloc *, const Node *) const machnode.cpp:39
maxL_reg_regNode::emit(C2_MacroAssembler *, PhaseRegAlloc *) const aarch64.ad:15683
PhaseOutput::scratch_emit_size(const Node *) output.cpp:3385
MachNode::emit_size(PhaseRegAlloc *) const machnode.cpp:157
MachNode::size(PhaseRegAlloc *) const machnode.cpp:149
PhaseOutput::shorten_branches(unsigned int *) output.cpp:539
PhaseOutput::Output() output.cpp:339
Compile::Code_Gen() compile.cpp:3081
Compile::Compile(ciEnv *, ciMethod *, int, Options, DirectiveSet *) compile.cpp:891
Compile::Compile(ciEnv *, ciMethod *, int, Options, DirectiveSet *) compile.cpp:693
C2Compiler::compile_method(ciEnv *, ciMethod *, int, bool, DirectiveSet *) c2compiler.cpp:141
CompileBroker::invoke_compiler_on_method(CompileTask *) compileBroker.cpp:2331
CompileBroker::compiler_thread_loop() compileBroker.cpp:1975
CompilerThread::thread_entry(JavaThread *, JavaThread *) compilerThread.cpp:67
JavaThread::thread_main_inner() javaThread.cpp:776
JavaThread::run() javaThread.cpp:761
Thread::call_run() thread.cpp:231
thread_native_entry(Thread *) os_bsd.cpp:601
#+end_src
* 25.3.25
todo: run without intrinsic
** benchmarking aarch64
*** branch never taken (option 3)
#+begin_src bash
Benchmark                            (probability)  (size)   Mode  Cnt     Score    Error   Units
MinMaxVector.longReductionSimpleMax            100    2048  thrpt    8  3810.543 ? 98.505  ops/ms
#+end_src
*** branch always taken (option 2)
#+begin_src bash
Benchmark                            (probability)  (size)   Mode  Cnt     Score    Error   Units
MinMaxVector.longReductionSimpleMax            100    2048  thrpt    8  1757.789 ? 39.362  ops/ms
#+end_src
*** cmov (option 1)
#+begin_src bash
Benchmark                            (probability)  (size)   Mode  Cnt     Score    Error   Units
MinMaxVector.longReductionSimpleMax            100    2048  thrpt    8  1095.610 ? 13.587  ops/ms
#+end_src
** source date error
Attempt to run benchmark but had issues building test:

#+begin_src bash
/nix/store/5y040sypyg0amh0igxs9rnx5fmj0d88i-temurin-bin-23.0.2/bin/jar --create --date 1980-01-01T00:00:00Z --file /Users/galder/1/jdk-avoid-cmov-long-min-max/build/release-darwin-arm64/support/modules_libs/java.base/jrt-fs.jar --manifest /Users/galder/1/jdk-avoid-cmov-long-min-max/build/release-darwin-arm64/support/modules_libs/java.base/_the.jrt-fs.jar_manifest 
...
date 1980-01-01T00:00:00Z is not within the valid range 1980-01-01T00:00:02Z to 2099-12-31T23:59:59Z
#+end_src

#+begin_src bash
bash configure \
   --disable-precompiled-headers \
   --with-boot-jdk=/nix/store/5y040sypyg0amh0igxs9rnx5fmj0d88i-temurin-bin-23.0.2 \
   --with-conf-name=release-darwin-arm64 \
   --with-jmh=build/jmh/jars \
   --with-devkit=/nix/store/vhsix1jn849mpxggwbw2zh1nbxpy0grc-Xcode16.2-MacOSX15 \
   --enable-hsdis-bundling --with-capstone=/nix/store/g9xz7lq27dsdvrg0i666nwc6322af9p1-capstone-5.0.5 --with-hsdis=capstone
...
checking what hotspot build time to use... 1980-01-01T00:00:00Z (from --with-source-date)
#+end_src

Nix:
#+begin_src bash
checking what source date to use... 315532800, from SOURCE_DATE_EPOCH
#+end_src

Leo:
#+begin_src bash
checking what source date to use... 1742909454, from 'current' (default)
#+end_src

Issue is that nix-shell sets ~SOURCE_DATE_EPOCH~:
#+begin_src bash
$ echo $SOURCE_DATE_EPOCH
315532800
#+end_src

Several ways to fix it.
Either pass in a source date, or unset ~SOURCE_DATE_EPOCH~ env variable:
https://espg.github.io/linux/nix.html

Cause: https://github.com/openjdk/jdk/pull/
** other way, branch always taken
#+begin_src asm
instruct maxL_reg_reg(iRegLNoSp dst, iRegL src1, iRegL src2)
%{
  match(Set dst (MaxL src1 src2));
  ins_cost(INSN_COST * 3);

  ins_encode %{
    Label done;
    __ mov(as_Register($dst$$reg), as_Register($src1$$reg));
    __ cmp(as_Register($src1$$reg), as_Register($src2$$reg));
    __ br(Assembler::GE, done);
    __ mov(as_Register($dst$$reg), as_Register($src2$$reg));
    __ bind(done);
  %}
  ins_pipe(pipe_cmp_branch);
%}
#+end_src

#+begin_src asm
  0x00000001382cfd68:   mov		x13, #0xb
  0x00000001382cfd7c:   mul		x14, x14, x13
  ...
  0x00000001382cfdb8:   mov		x0, x14             ; x0 (dst) <- x14 (src1, value)
  0x00000001382cfdbc:   cmp		x14, x12            ; x14 (src1, value) >= x12 (src2, max)
  0x00000001382cfdc0:   b.ge		#0x1382cfdc8        ; yes, it's always greater so branch taken
  0x00000001382cfdc4:   mov		x0, x12             ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::test@25 (line 24)
  0x00000001382cfdc8:   cmp		w11, #0x3fd
#+end_src
** one way v2, branch never taken
#+begin_src asm
instruct maxL_reg_reg(iRegLNoSp dst, iRegL src1, iRegL src2)
%{
  match(Set dst (MaxL src1 src2));
  ins_cost(INSN_COST * 3);

  ins_encode %{
    Label done;
    __ mov(as_Register($dst$$reg), as_Register($src2$$reg));
    __ cmp(as_Register($src2$$reg), as_Register($src1$$reg));
    __ br(Assembler::LT, done);
    __ mov(as_Register($dst$$reg), as_Register($src1$$reg));
    __ bind(done);
  %}
  ins_pipe(pipe_cmp_branch);
%}
#+end_src
#+begin_src asm
  0x00000001282cfd98:   mul		x12, x12, x13
  ...
  0x00000001282cfdb8:   mov		x0, x12             ; x0 (dst) <- x12 (value)
  0x00000001282cfdbc:   cmp		x12, x14            ; x12 (value), x14 (max)
  0x00000001282cfdc0:   b.lt		#0x1282cfdc8        ; value < max ? never taken branch
  0x00000001282cfdc4:   mov		x0, x14             ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::test@25 (line 24)
                                                            ; dst (dst) <- x14 max
#+end_src
** one way
Is this right?
#+begin_src asm
instruct maxL_reg_reg(iRegLNoSp dst, iRegL src1, iRegL src2)
%{
  match(Set dst (MaxL src1 src2));
  ins_cost(INSN_COST * 3);

  ins_encode %{
    Label done;
    __ mov(as_Register($dst$$reg), as_Register($src2$$reg));
    __ cmp(as_Register($dst$$reg), as_Register($src1$$reg));
    __ br(Assembler::LT, done);
    __ mov(as_Register($dst$$reg), as_Register($src1$$reg));
    __ bind(done);
  %}
  ins_pipe(pipe_cmp_branch);
%}
#+end_src
#+begin_src asm
  0x0000000137acfd68:   mov		x13, #0xb           ; x13 = 11
  ...
  0x0000000137acfd98:   mul		x12, x12, x13       ; value = 11 * data[i]
  ...
  0x0000000137acfdb8:   mov		x0, x12             ; mov dst <- src2 (value)
  0x0000000137acfdbc:   cmp		x0, x14             ; cmp dst (value), src1 (max)
  0x0000000137acfdc0:   b.lt		#0x137acfdc8        ; branch if (dst (value) < src1 (max)) ; branch won't happen because value always > max
  0x0000000137acfdc4:   mov		x0, x14             ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::test@25 (line 24)
                                                            ; mov dst <- src1 (max)
#+end_src
* 21.3.25
** branch one way
#+begin_src asm
instruct maxL_reg_reg(iRegLNoSp dst, iRegL src1, iRegL src2)
%{
  match(Set dst (MaxL src1 src2));
  ins_cost(INSN_COST * 3);

  ins_encode %{
    Label done;
    __ mov(as_Register($dst$$reg), as_Register($src2$$reg));
    __ cmp(as_Register($dst$$reg), as_Register($src1$$reg));
    __ br(Assembler::LT, done);
    __ mov(as_Register($dst$$reg), as_Register($src1$$reg));
    __ bind(done);
  %}
  ins_pipe(pipe_cmp_branch);
%}
#+end_src
** how to write branch code in backend
Create MyMax that does things manually.

Bytecode:
#+begin_src java
  static long test(long[]);
    descriptor: ([J)J
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=8, args_size=1
         0: ldc2_w        #11                 // long -9223372036854775808l
         3: lstore_1
         4: iconst_0
         5: istore_3
         6: iload_3
         7: sipush        1024
        10: if_icmpge     46
        13: ldc2_w        #13                 // long 11l
        16: aload_0
        17: iload_3
        18: laload
        19: lmul
        20: lstore        4
        22: lload_1
        23: lload         4
        25: lcmp
        26: iflt          33
#+end_src

#+begin_src asm
 ;; 0x8000000000000000
 ;; 0xB
  0x000000012facfdd4:   mov		x12, #0xb
  0x000000012facfdd8:   mul		x11, x11, x12       ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MyMax::test@19 (line 23)
                                                            ; x11 is value
  0x000000012facfddc:   mov		x8, #-0x8000000000000000
  0x000000012facfde0:   cmp		x11, x8             ; x8 is max
  0x000000012facfde4:   b.le		#0x12facff78        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MyMax::test@26 (line 24) 
 ;; B5: #	out( B28 B6 ) <- in( B4 )  Freq: 0.999996
 ;; 0x1
  0x000000012facfde8:   mov		w2, #1
  0x000000012facfdec:   cmp		w10, #1
  ...
 ;; B29: #	out( B25 ) <- in( B4 )  Freq: 4.76836e-07
 ;; 0x8000000000000000
  0x000000012facff78:   mov		x14, #-0x8000000000000000
  0x000000012facff7c:   mov			w2, wzr
  0x000000012facff80:   mov		x0, x11
  0x000000012facff84:   b		#0x12facff04        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - MyMax::test@26 (line 24)
#+end_src
** disable macro expansion and implement cmov in backend
Trying to add backend implementation for MinL/MaxL.
Used code in here as base to decide how to approach it:
https://github.com/openjdk/jdk/compare/master...galderz:jdk:topic.intrinsify-max-min-long.0528?expand=1
Removed macro expansion for the nodes.

Java code:
#+begin_src java
     1	import java.util.Arrays;
     2
     3	public class Test
     4	{
     5	    static final int RANGE = 1024;
     6	    static final int ITER = 10_000;
     7
     8	    // Initializes data with increasing values,
     9	    // so max one of the branches is the one that is always taken
    10	    static void init(long[] data)
    11	    {
    12	        for (int i = 0; i < RANGE; i++)
    13	        {
    14	            data[i] = i + 1;
    15	        }
    16	    }
    17
    18	    static long test(long[] data)
    19	    {
    20	        long max = Long.MIN_VALUE;
    21	        for (int i = 0; i < RANGE; i++)
    22	        {
    23	            final long value = 11 * data[i];
    24	            final long tmp = Math.max(max, value);
    25	            max = tmp;
    26	        }
    27	        return max;
    28	    }
    29
    30	    public static void main(String[] args)
    31	    {
    32	        long[] data = new long[RANGE];
    33	        init(data);
    34
    35	        long result = 0;
    36	        for (long i = 0; i < ITER; i++)
    37	        {
    38	            result = test(data);
    39	        }
    40
    41	        // Validate
    42	        if (result == 11 * Arrays.stream(data).max().getAsLong())
    43	        {
    44	            System.out.println("Success");
    45	        }
    46	        else
    47	        {
    48	            throw new AssertionError("Failed");
    49	        }
    50	    }
    51	}
#+end_src

Before, ideal graph:
#+begin_src bash
 467  CMoveL  === _ 466 430 415  [[ 469 471 ]]  #long !orig=[414],[360],[132],377 !jvms: Test::test @ bci:25 (line 24)
 469  CmpL  === _ 467 413  [[ 470 ]]
 470  Bool  === _ 469  [[ 471 ]] [lt]
#+end_src

Before, assemly:
#+begin_src asm
  0x0000000110607dfc:   csel		x0, x10, x0, lt     ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::test@25 (line 24)
#+end_src

After, ideal graph:
#+begin_src bash
 412  MaxL  === _ 414 413  [[ 360 ]]  !orig=132,377 !jvms: Test::test @ bci:25 (line 24)
#+end_src

After, assembly:
#+begin_src asm
  0x000000010e6d3db0:   csel		x0, x14, x12, gt    ;*invokestatic max {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::test@25 (line 24)
#+end_src
